{"version":3,"file":"static/js/957.08b7c600.chunk.js","mappings":"iTAEaA,E,QAAQC,GAAAA,IAAU,6C,iDCqBzBC,EAAU,SAACC,EAAYC,GAC3B,OAAOA,EAAOC,MACZ,IAAK,gBACH,OAAO,kBACFF,GAAK,IACRG,SAAS,EAAMC,MAAO,KAE1B,IAAK,gBACH,OAAO,kBACFJ,GAAK,IACRG,SAAS,EAAOE,MAAOJ,EAAOK,QAASF,MAAO,KAElD,IAAK,aACH,OAAO,kBACFJ,GAAK,IACRG,SAAS,EAAMC,MAAOH,EAAOK,UAEjC,IAAK,cACH,OAAO,kBACFN,GAAK,IACRO,YAAY,IAEhB,IAAK,cACH,OAAO,kBACFP,GAAK,IACRO,YAAY,EAAOC,YAAY,IAEnC,IAAK,WACH,OAAO,kBACFR,GAAK,IACRO,YAAY,EAAOE,SAAUR,EAAOK,UAExC,IAAK,YACH,OAAO,kBACFN,GAAK,IACRO,YAAY,EAAOC,YAAY,IAEnC,QACE,OAAO,UAAKR,GAElB,EAmPA,EAjPc,WACZ,IAAMU,GAAWC,EAAAA,EAAAA,MAEjB,GAAsEC,EAAAA,EAAAA,YAAWb,EAAS,CACxFI,SAAS,EACTE,MAAO,CAAC,EACRD,MAAO,GACPI,YAAY,EACZD,YAAY,IACZ,sBANOJ,EAAO,EAAPA,QAASC,EAAK,EAALA,MAAOC,EAAK,EAALA,MAAOG,EAAU,EAAVA,WAAYD,EAAU,EAAVA,WAAcM,EAAQ,KAStDC,GADGC,EAAAA,EAAAA,MACPC,GAGAC,GADUC,EAAAA,EAAAA,YAAWC,EAAAA,GAArBnB,MACAiB,SAER,GAAwCG,EAAAA,EAAAA,MAAwB,eAAvDC,EAAS,KAATA,UAAaC,EAAc,KAgFpC,OAxCAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,yCAAG,2FAEqB,OAFrB,SAEfX,EAAS,CAAEX,KAAM,kBAAmB,SACRuB,EAAAA,EAAAA,IAAU,oCAAD,OAAqCX,GAAW,CACnFY,QAAS,CAAEC,cAAc,UAAD,OAAYV,EAASW,UAC5C,KAAD,WAFMC,EAAI,EAAJA,KAGRhB,EAAS,CAAEX,KAAM,gBAAiBI,QAASuB,IAAQ,gDAEnDhB,EAAS,CAAEX,KAAM,aAAcI,SAASwB,EAAAA,EAAAA,GAAS,EAAD,MAAW,yDAE9D,kBAVe,mCAYhB,IAAIb,EACF,OAAOP,EAAS,UAElB,IAAIL,EAAM0B,KAAQ1B,EAAM0B,KAAO1B,EAAM0B,MAAQjB,EAC3CU,IACGhB,GACDK,EAAS,CAAEX,KAAM,kBAEd,CACL,IAAM8B,EAAgB,yCAAG,2GACUP,EAAAA,EAAAA,IAAU,wCAAyC,CAClFC,QAAS,CAAEC,cAAc,UAAD,OAAYV,EAASW,UAC5C,KAAD,WAFYK,EAAQ,EAAdJ,KAGRP,EAAe,CACbpB,KAAM,eACNgC,MAAO,CACL,YAAaD,EACbE,SAAU,SAGdb,EAAe,CAAEpB,KAAM,mBAAoBgC,MAAOE,EAAAA,GAAAA,UAAgC,2CACnF,kBAZqB,mCActBJ,GACF,CACF,GAAE,CAAC3B,EAAOK,EAAUO,EAAUH,EAASN,IAGrCL,GACE,SAAC,KAAU,IACTC,GACF,SAAC,KAAU,CAACiC,QAAQ,SAAQ,SACxBjC,KAGJ,4BACE,SAAC,KAAM,WACL,6BAAO,UAASU,EAAS,UAE3B,gBAAIwB,UAAU,OAAM,UAAC,WACVxB,MAEX,UAACyB,EAAA,EAAG,YACF,UAACC,EAAA,EAAG,CAACC,GAAI,EAAE,WACT,SAACC,EAAA,EAAI,CAACJ,UAAU,OAAM,UACpB,UAACI,EAAA,OAAS,YACR,SAACA,EAAA,QAAU,UAAC,aACZ,UAACA,EAAA,OAAS,YACR,4BAAQ,UAAc,IAAErC,EAAMsC,gBAAgBC,SAAS,KAAC,mBACxD,4BAAQ,iBAAkB,IAAEvC,EAAMsC,gBAAgBE,QAAQ,IACzDxC,EAAMsC,gBAAgBG,KAAK,KAAGzC,EAAMsC,gBAAgBI,WAAW,KAAG1C,EAAMsC,gBAAgBK,WAE1F3C,EAAM4C,aACL,UAAC,KAAU,WAAC,YACC5C,EAAM6C,gBAGnB,SAAC,KAAU,CAACb,QAAQ,SAAQ,SAAC,yBAMnC,SAACK,EAAA,EAAI,CAACJ,UAAU,OAAM,UACpB,UAACI,EAAA,OAAS,YACR,SAACA,EAAA,QAAU,UAAC,eACZ,SAACA,EAAA,OAAS,WACR,8BAAQ,cAAUrC,EAAM8C,oBAEzB9C,EAAM+C,QACL,UAAC,KAAU,WAAC,uBACY/C,EAAMgD,WAG9B,SAAC,KAAU,CAAChB,QAAQ,SAAQ,SAAC,oCAMnC,SAACK,EAAA,EAAI,CAACJ,UAAU,OAAM,UACpB,UAACI,EAAA,OAAS,YACR,SAACA,EAAA,QAAU,UAAC,WACZ,SAACY,EAAA,EAAS,CAACjB,QAAQ,QAAO,SACvBhC,EAAMkD,WAAWC,KAAI,SAACC,GAAS,OAC9B,SAACH,EAAA,OAAc,WACb,UAACf,EAAA,EAAG,CAACD,UAAU,qBAAoB,WACjC,UAACE,EAAA,EAAG,CAACC,GAAI,EAAE,WACT,SAAC5C,EAAK,CACJ6D,IAAKD,EAAKE,MACVC,IAAKH,EAAKI,KACVvB,UAAU,oCACV,IAAG,KACL,SAAC,EAAAwB,KAAI,CAACC,GAAE,kBAAaN,EAAKO,MAAO,SAAEP,EAAKI,WAE1C,SAACrB,EAAA,EAAG,CAACC,GAAI,EAAE,SACRgB,EAAKQ,YAER,UAACzB,EAAA,EAAG,CAACC,GAAI,EAAE,UAAC,KACPgB,EAAKS,aAdOT,EAAK1B,IAiBT,eAM3B,SAACS,EAAA,EAAG,CAACC,GAAI,EAAE,UACT,SAACC,EAAA,EAAI,WACH,UAACA,EAAA,OAAS,YACR,SAACA,EAAA,QAAU,UAAC,sBACZ,UAACY,EAAA,EAAS,CAACjB,QAAQ,QAAO,WACxB,SAACiB,EAAA,OAAc,WACb,UAACf,EAAA,EAAG,YACF,SAACC,EAAA,EAAG,UAAC,WACL,UAACA,EAAA,EAAG,WAAC,KAAGnC,EAAM8D,WAAWC,QAAQ,YAGrC,SAACd,EAAA,OAAc,WACb,UAACf,EAAA,EAAG,YACF,SAACC,EAAA,EAAG,UAAC,aACL,UAACA,EAAA,EAAG,WAAC,KAAGnC,EAAMgE,cAAcD,QAAQ,YAGxC,SAACd,EAAA,OAAc,WACb,UAACf,EAAA,EAAG,YACF,SAACC,EAAA,EAAG,UAAC,WACL,UAACA,EAAA,EAAG,WAAC,KAAGnC,EAAMiE,SAASF,QAAQ,YAGnC,SAACd,EAAA,OAAc,WACb,UAACf,EAAA,EAAG,YACF,SAACC,EAAA,EAAG,WACF,4BAAQ,oBAEV,SAACA,EAAA,EAAG,WACF,8BAAQ,KACFnC,EAAMkE,WAAWH,QAAQ,cAKrC/D,EAAM+C,SACN,UAACE,EAAA,OAAc,WACZjC,GACC,SAAC,KAAU,KAEX,0BACE,SAAC,KAAa,CACZmD,YAzMJ,SAAC3C,EAAW4C,GAC9B,OAAOA,EAAQpE,MAAMqE,OAAO,CAC1BC,eAAgB,CACd,CACEC,OAAQ,CAAE1C,MAAO7B,EAAMkE,gBAI5BM,MAAK,SAAC/D,GACL,OAAOA,CACT,GACF,EA+LwBgE,UA7LN,SAACjD,EAAW4C,GAC5B,OAAOA,EAAQpE,MAAM0E,UAAUF,KAAI,yCAAC,WAAgBG,GAAY,8EAC9D,IACEnE,EAAS,CAAEX,KAAM,gBAAiB,EACZuB,EAAAA,EAAAA,IAAU,oCAAD,OAAqCpB,EAAM0B,IAAG,QAC3E,CACEiD,QAAAA,GAEF,CACEtD,QAAS,CAAEC,cAAc,UAAD,OAAYV,EAASW,UALzCC,EAAI,EAAJA,KAQRhB,EAAS,CAAEX,KAAM,cAAeI,QAASuB,IACzCoD,EAAAA,GAAAA,QAAc,kBAIhB,CAHE,MAAOC,GACPrE,EAAS,CAAEX,KAAM,WAAYI,SAASwB,EAAAA,EAAAA,GAASoD,KAC/CD,EAAAA,GAAAA,OAAYnD,EAAAA,EAAAA,GAASoD,GACvB,CAAC,2CACF,mDAjBkC,GAkBrC,EA2KwBC,QAzKR,SAACD,GACfD,EAAAA,GAAAA,OAAYnD,EAAAA,EAAAA,GAASoD,GACvB,MA2KmB3E,IACC,SAAC,KAAU,sBAYjC,C,sRCxSM6E,EAA6BC,EAAAA,YAAiB,WAUjDC,GAAQ,IATTC,EAAQ,EAARA,SACAC,EAAM,EAANA,OACAC,EAAQ,EAARA,SACAC,EAAQ,EAARA,SACApD,EAAS,EAATA,UACAD,EAAO,EAAPA,QACApC,EAAM,EAANA,OACA0F,EAAE,EAAFA,GACGC,GAAK,YAERL,GAAWM,EAAAA,EAAAA,IAAmBN,EAAU,mBACxC,OAA6BO,EAAAA,EAAAA,IAAW,QACtCC,KAAKC,EAAAA,EAAAA,GAAaN,EAAUE,EAAMK,MAClCT,OAAAA,GACGI,IACH,eAJKM,EAAY,KAAEC,EAAI,KAKnBC,GAAcC,EAAAA,EAAAA,IAAiB,SAAAC,GACnC,GAAIb,EAGF,OAFAa,EAAMC,sBACND,EAAME,kBAGRN,EAAaO,QAAQH,EACvB,IACIb,QAA+BiB,IAAnBd,EAAMe,WACpBf,EAAMe,UAAY,EAClBf,EAAM,kBAAmB,GAI3B,IAAMgB,EAAYjB,IAAO1F,EAAS2F,EAAMK,KAAO,IAAM,SAAW,OAEhE,OAAoBY,EAAAA,EAAAA,KAAKD,GAAW,wBAClCtB,IAAKA,GACFM,GACAM,GAAY,IACfO,QAASL,EACT9D,UAAWwE,IAAWxE,EAAWiD,EAAUY,EAAKY,UAAY,SAAUtB,GAAY,WAAYpD,GAAW,GAAJ,OAAOkD,EAAQ,YAAIlD,GAAWpC,GAAU,GAAJ,OAAOsF,EAAQ,cAE5J,IACAH,EAAc4B,YAAc,gBAC5B,Q,kEC1CM1D,EAAyB+B,EAAAA,YAAiB,SAACO,EAAON,GACtD,IAaI2B,EAbJ,GASIC,EAAAA,EAAAA,IAAgBtB,EAAO,CACzBuB,UAAW,aATX7E,EAAS,EAATA,UACU8E,EAAe,EAAzB7B,SACAlD,EAAO,EAAPA,QACAgF,EAAU,EAAVA,WACAC,EAAQ,EAARA,SAAQ,IAER3B,GAAAA,OAAE,IAAG,QAAK,EACP4B,GAAe,YAIdhC,GAAWM,EAAAA,EAAAA,IAAmBuB,EAAiB,cAMrD,OAJIC,IACFJ,GAAmC,IAAfI,EAAsB,aAAe,cAAH,OAAiBA,KAGrDR,EAAAA,EAAAA,KAAKW,EAAAA,GAAS,gBAChClC,IAAKA,GACFiC,GAAe,IAClB5B,GAAIA,EACJrD,UAAWwE,IAAWxE,EAAWiD,EAAUlD,GAAW,GAAJ,OAAOkD,EAAQ,YAAIlD,GAAW4E,GAAqB,GAAJ,OAAO1B,EAAQ,YAAI0B,GAAqBK,GAAY,GAAJ,OAAO/B,EAAQ,gBAEpK,IACAjC,EAAU0D,YAAc,YACxB,MAAeS,OAAOC,OAAOpE,EAAW,CACtCqE,KAAMvC,G","sources":["styles/Order.ts","screens/Order/index.tsx","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Image = styled.img`\r\n  max-width: 100px;\r\n`;","import React, { useContext, useEffect, useReducer } from 'react'\r\n\r\nimport axios from 'axios';\r\n\r\nimport { PayPalButtons, SCRIPT_LOADING_STATE, usePayPalScriptReducer } from '@paypal/react-paypal-js'\r\n\r\nimport { Card, Col, ListGroup, Row } from 'react-bootstrap';\r\n\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nimport { Image } from '../../styles/Order'\r\n\r\nimport { LoadingBox, MessageBox } from '../../components';\r\n\r\nimport { Store } from '../../context/Store'\r\n\r\nimport { getError } from '../../util/utils';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst reducer = (state: any, action: any) => {\r\n  switch(action.type) {\r\n    case 'FETCH_REQUEST':\r\n      return {\r\n        ...state,\r\n        loading: true, error: ''\r\n      }\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        loading: false, order: action.payload, error: ''\r\n      }\r\n    case 'FETCH_FAIL':\r\n      return {\r\n        ...state,\r\n        loading: true, error: action.payload\r\n      }\r\n    case 'PAY_REQUEST':\r\n      return {\r\n        ...state,\r\n        loadingPay: true\r\n      }\r\n    case 'PAY_SUCCESS':\r\n      return {\r\n        ...state,\r\n        loadingPay: false, successPay: true\r\n      }\r\n    case 'PAY_FAIL':\r\n      return {\r\n        ...state,\r\n        loadingPay: false, errorPay: action.payload\r\n      }\r\n    case 'PAY_RESET':\r\n      return {\r\n        ...state,\r\n        loadingPay: false, successPay: false\r\n      }\r\n    default:\r\n      return { ...state }\r\n  }\r\n}\r\n\r\nconst Order = () => {\r\n  const navigate = useNavigate();\r\n  \r\n  const [{ loading, error, order, successPay, loadingPay }, dispatch] = useReducer(reducer, {\r\n    loading: true,\r\n    order: {},\r\n    error: '',\r\n    successPay: false,\r\n    loadingPay: false\r\n  });\r\n\r\n  const params = useParams();\r\n  const { id: orderId } = params;\r\n  \r\n  const { state } = useContext(Store);\r\n  const { userInfo } = state;\r\n\r\n  const [{ isPending }, paypalDispatch] = usePayPalScriptReducer(); \r\n\r\n  const createOrder = (data:any , actions: any) => {\r\n    return actions.order.create({\r\n      purchase_units: [\r\n        {\r\n          amount: { value: order.totalPrice },\r\n        },\r\n      ],\r\n    })\r\n    .then((orderId: any) => {\r\n      return orderId\r\n    });\r\n  }\r\n\r\n  const onApprove = (data: any, actions: any) => {\r\n    return actions.order.capture().then(async function (details: any) {\r\n      try {\r\n        dispatch({ type: 'PAY_REQUEST' });\r\n        const { data }: any = axios.put(`http://localhost:3001/api/orders/${order._id}/pay`, \r\n          {\r\n            details,\r\n          },\r\n          {\r\n            headers: { authorization: `Bearer ${userInfo.token}` }\r\n          }\r\n        );\r\n        dispatch({ type: 'PAY_SUCCESS', payload: data });\r\n        toast.success('Pedido foi pago');\r\n      } catch (err) {\r\n        dispatch({ type: 'PAY_FAIL', payload: getError(err) })\r\n        toast.error(getError(err));\r\n      }\r\n    })\r\n  }\r\n\r\n  const onError = (err: any) => {\r\n    toast.error(getError(err))\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchOrder = async () => {\r\n      try {\r\n        dispatch({ type: 'FETCH_REQUEST' });\r\n        const { data }: any = await axios.get(`http://localhost:3001/api/orders/${orderId}`, {\r\n          headers: { authorization: `Bearer ${userInfo.token}`}\r\n        });\r\n        dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n      } catch (error: any) {  \r\n        dispatch({ type: 'FETCH_FAIL', payload: getError(error) });\r\n      }\r\n    }\r\n\r\n    if(!userInfo) {\r\n      return navigate(\"/login\");\r\n    }\r\n    if(!order._id || (order._id && order._id !== orderId)) {\r\n      fetchOrder(); \r\n      if(successPay) {\r\n        dispatch({ type: 'PAY_RESET' });\r\n      }\r\n    } else {\r\n      const loadPaypalScript = async () => {\r\n        const { data: clientId } = await axios.get(`http://localhost:3001/api/keys/paypal`, {\r\n          headers: { authorization: `Bearer ${userInfo.token}` }\r\n        });\r\n        paypalDispatch({\r\n          type: 'resetOptions',\r\n          value: {\r\n            'client-id': clientId,\r\n            currency: 'BRL',\r\n          },\r\n        });\r\n        paypalDispatch({ type: \"setLoadingStatus\", value: SCRIPT_LOADING_STATE.PENDING });\r\n      }\r\n\r\n      loadPaypalScript();\r\n    }\r\n  },[order, navigate, userInfo, orderId, successPay]);\r\n\r\n  return (\r\n    loading ? (\r\n      <LoadingBox />\r\n    ) : error ? (\r\n      <MessageBox variant='danger'>\r\n        { error }\r\n      </MessageBox>\r\n    ) : (\r\n      <div>\r\n        <Helmet>\r\n          <title>Pedido { orderId } </title>\r\n        </Helmet>\r\n        <h1 className='my-3'>\r\n          Pedido: {orderId}\r\n        </h1>\r\n        <Row>\r\n          <Col md={8}>\r\n            <Card className='mb-3'>\r\n              <Card.Body>\r\n                <Card.Title>Entrega</Card.Title>\r\n                <Card.Text>\r\n                  <strong>Nome:</strong> {order.shippingAddress.fullName} <br />\r\n                  <strong>Endereço:</strong> {order.shippingAddress.address},\r\n                  {order.shippingAddress.city}, {order.shippingAddress.postalCode}, {order.shippingAddress.country}\r\n                </Card.Text>\r\n                {order.isDelivered ? (\r\n                  <MessageBox>\r\n                    Enviado: { order.deliveredAt }\r\n                  </MessageBox>\r\n                ) : (\r\n                  <MessageBox variant='danger'>\r\n                    Não enviado\r\n                  </MessageBox>\r\n                )}\r\n              </Card.Body>\r\n            </Card>\r\n            <Card className='mb-3'>\r\n              <Card.Body>\r\n                <Card.Title>Pagamento</Card.Title>\r\n                <Card.Text>\r\n                  <strong>Método: { order.payamentMethod }</strong>\r\n                </Card.Text>\r\n                {order.isPaid ? (\r\n                  <MessageBox>\r\n                    Pagamento efetuado: { order.paidAt }\r\n                  </MessageBox>\r\n                ) : (\r\n                  <MessageBox variant=\"danger\">\r\n                    Pagamento não efetuado\r\n                  </MessageBox>\r\n                )}\r\n              </Card.Body>\r\n            </Card>\r\n            <Card className='mb-3'>\r\n              <Card.Body>\r\n                <Card.Title>Items</Card.Title>\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item: any) => (\r\n                    <ListGroup.Item key={item._id}>\r\n                      <Row className='align-items-center'>\r\n                        <Col md={6}>\r\n                          <Image \r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            className=\"img-fluid rounded img-thumbnail\"\r\n                          /> { ' ' }\r\n                          <Link to={`/product${item.slug}`}>{item.name}</Link>\r\n                        </Col>\r\n                        <Col md={3}>\r\n                          {item.quantity}\r\n                        </Col>\r\n                        <Col md={3}>\r\n                          R${item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col md={4}>\r\n            <Card>\r\n              <Card.Body>\r\n                <Card.Title>Resumo do pedido</Card.Title>\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Items</Col>\r\n                      <Col>R${order.itemsPrice.toFixed(2)}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Entrega</Col>\r\n                      <Col>R${order.shippingPrice.toFixed(2)}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Taxas</Col>\r\n                      <Col>R${order.taxPrice.toFixed(2)}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>\r\n                        <strong>Pedido Total</strong>\r\n                      </Col>\r\n                      <Col>\r\n                        <strong>\r\n                          R${ order.totalPrice.toFixed(2) }\r\n                        </strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                {!order.isPaid && (\r\n                  <ListGroup.Item>\r\n                    {isPending ? (\r\n                      <LoadingBox />\r\n                    ) : (\r\n                      <div>\r\n                        <PayPalButtons\r\n                          createOrder={createOrder}\r\n                          onApprove={onApprove}\r\n                          onError={onError}\r\n                        ></PayPalButtons>\r\n                      </div>\r\n                    )}\r\n                    {loadingPay && (\r\n                      <LoadingBox />\r\n                    )}\r\n                  </ListGroup.Item>\r\n                )}\r\n                </ListGroup>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Order","import classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroupItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  disabled,\n  eventKey,\n  className,\n  variant,\n  action,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    ...props\n  });\n  const handleClick = useEventCallback(event => {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n    navItemProps.onClick(event);\n  });\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  // eslint-disable-next-line no-nested-ternary\n  const Component = as || (action ? props.href ? 'a' : 'button' : 'div');\n  process.env.NODE_ENV !== \"production\" ? warning(as || !(!action && props.href), '`action=false` and `href` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    ...navItemProps,\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, meta.isActive && 'active', disabled && 'disabled', variant && `${bsPrefix}-${variant}`, action && `${bsPrefix}-action`)\n  });\n});\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ListGroupItem from './ListGroupItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    className,\n    bsPrefix: initialBsPrefix,\n    variant,\n    horizontal,\n    numbered,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as = 'div',\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  let horizontalVariant;\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : `horizontal-${horizontal}`;\n  }\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(BaseNav, {\n    ref: ref,\n    ...controlledProps,\n    as: as,\n    className: classNames(className, bsPrefix, variant && `${bsPrefix}-${variant}`, horizontalVariant && `${bsPrefix}-${horizontalVariant}`, numbered && `${bsPrefix}-numbered`)\n  });\n});\nListGroup.displayName = 'ListGroup';\nexport default Object.assign(ListGroup, {\n  Item: ListGroupItem\n});"],"names":["Image","styled","reducer","state","action","type","loading","error","order","payload","loadingPay","successPay","errorPay","navigate","useNavigate","useReducer","dispatch","orderId","useParams","id","userInfo","useContext","Store","usePayPalScriptReducer","isPending","paypalDispatch","useEffect","fetchOrder","axios","headers","authorization","token","data","getError","_id","loadPaypalScript","clientId","value","currency","SCRIPT_LOADING_STATE","variant","className","Row","Col","md","Card","shippingAddress","fullName","address","city","postalCode","country","isDelivered","deliveredAt","payamentMethod","isPaid","paidAt","ListGroup","orderItems","map","item","src","image","alt","name","Link","to","slug","quantity","price","itemsPrice","toFixed","shippingPrice","taxPrice","totalPrice","createOrder","actions","create","purchase_units","amount","then","onApprove","capture","details","toast","err","onError","ListGroupItem","React","ref","bsPrefix","active","disabled","eventKey","as","props","useBootstrapPrefix","useNavItem","key","makeEventKey","href","navItemProps","meta","handleClick","useEventCallback","event","preventDefault","stopPropagation","onClick","undefined","tabIndex","Component","_jsx","classNames","isActive","displayName","horizontalVariant","useUncontrolled","activeKey","initialBsPrefix","horizontal","numbered","controlledProps","BaseNav","Object","assign","Item"],"sourceRoot":""}