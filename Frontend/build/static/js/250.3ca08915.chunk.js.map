{"version":3,"file":"static/js/250.3ca08915.chunk.js","mappings":"mRAEaA,E,QAAYC,GAAAA,IAAU,6C,mBCS7BC,EAAU,SAACC,EAAWC,GAC1B,OAAOA,EAAOC,MACZ,IAAK,iBACH,OAAO,kBACFF,GAAK,IAAEG,eAAe,IAE7B,IAAK,iBAIL,IAAK,cACH,OAAO,kBACFH,GAAK,IAAEG,eAAe,IAG7B,QACE,OAAOH,EAGb,EAuGA,EArGyB,WACvB,OAAyCI,EAAAA,EAAAA,YAAWC,EAAAA,GAA5CL,EAAK,EAALA,MAAiBM,EAAW,EAArBC,SACPC,EAAaR,EAAbQ,SAER,GAAuCC,EAAAA,EAAAA,YAAWV,EAAU,CAC1DW,gBAAgB,IAChB,eAFyBH,GAAJ,KAAdG,eAA0B,MAInC,GAAwBC,EAAAA,EAAAA,UAASH,EAASI,MAAQ,IAAG,eAA9CA,EAAI,KAAEC,EAAO,KACpB,GAA0BF,EAAAA,EAAAA,UAASH,EAASM,OAAS,IAAG,eAAjDA,EAAK,KAAEC,EAAQ,KACtB,GAAgCJ,EAAAA,EAAAA,UAAS,IAAG,eAArCK,EAAQ,KAAEC,EAAW,KAC5B,GAA8CN,EAAAA,EAAAA,UAAS,IAAG,eAAnDO,EAAe,KAAEC,EAAkB,KAEpCC,EAAY,yCAAG,WAAOC,GAAM,8EACb,GAAnBA,EAAEC,iBAECN,IAAaE,EAAe,gBACgB,OAA7CK,EAAAA,GAAAA,QAAc,+BAA+B,mDAKjBC,EAAAA,EAAAA,IAAU,0CAEtC,CACEZ,KAAAA,EACAE,MAAAA,EACAE,SAAAA,GAEF,CACES,QAAS,CAAEC,cAAc,UAAD,OAAYlB,EAASmB,UAE/C,KAAD,WAVSC,EAAI,EAAJA,KAWVrB,EAAS,CACPL,KAAM,mBAERI,EAAY,CAAEJ,KAAM,cAAe2B,QAASD,IAC5CE,aAAaC,QAAQ,WAAYC,KAAKC,UAAUL,IAChDL,EAAAA,GAAAA,QAAc,sCAAmC,kDAG/ChB,EAAS,CACPL,KAAM,gBAERqB,EAAAA,GAAAA,OAAYW,EAAAA,EAAAA,GAAS,EAAD,KAAO,0DAE9B,gBAjCiB,sCAmClB,OACE,UAACrC,EAAS,CAACsC,UAAU,YAAW,WAC9B,SAAC,KAAM,WACL,2BAAO,4BAET,wBAAI,0BAGJ,kBAAMC,SAAUhB,EAAa,WAC3B,UAACiB,EAAA,QAAU,CAACF,UAAU,OAAOG,UAAU,OAAM,WAC3C,SAACD,EAAA,QAAU,UAAC,UACZ,SAACA,EAAA,UAAY,CACXE,MAAO3B,EACP4B,SAAU,SAACnB,GAAC,OAAKR,EAAQQ,EAAEoB,OAAOF,MAAM,EACxCG,UAAQ,QAGZ,UAACL,EAAA,QAAU,CAACF,UAAU,OAAOG,UAAU,QAAO,WAC5C,SAACD,EAAA,QAAU,UAAC,WACZ,SAACA,EAAA,UAAY,CACXE,MAAOzB,EACPZ,KAAK,QACLsC,SAAU,SAACnB,GAAC,OAAKN,EAASM,EAAEoB,OAAOF,MAAM,EACzCG,UAAQ,QAGZ,UAACL,EAAA,QAAU,CAACF,UAAU,OAAOG,UAAU,WAAU,WAC/C,SAACD,EAAA,QAAU,UAAC,WACZ,SAACA,EAAA,UAAY,CACXE,MAAOvB,EACPd,KAAK,WACLsC,SAAU,SAACnB,GAAC,OAAKJ,EAAYI,EAAEoB,OAAOF,MAAM,EAC5CG,UAAQ,QAGZ,UAACL,EAAA,QAAU,CAACF,UAAU,OAAOG,UAAU,kBAAiB,WACtD,SAACD,EAAA,QAAU,UAAC,uBACZ,SAACA,EAAA,UAAY,CACXE,MAAOrB,EACPhB,KAAK,WACLsC,SAAU,SAACnB,GAAC,OAAKF,EAAmBE,EAAEoB,OAAOF,MAAM,EACnDG,UAAQ,QAIZ,SAACC,EAAA,EAAM,CAACzC,KAAK,SAAQ,SAAC,mBAM9B,C","sources":["styles/Profile.ts","screens/Profile/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  max-width: 600px;\r\n`;","import axios from 'axios';\r\nimport React, { useContext, useState, useReducer, useEffect } from 'react'\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { Store } from '../../context/Store'\r\n\r\nimport { Container } from '../../styles/Profile';\r\nimport { getError } from '../../util/utils';\r\n\r\nconst reducer = (state:any, action:any) => {\r\n  switch(action.type) {\r\n    case 'UPDATE_REQUEST':\r\n      return {\r\n        ...state, loadingUpdate: true\r\n      }\r\n    case 'UPDATE_SUCCESS':\r\n      return {\r\n        ...state, loadingUpdate: false\r\n      }\r\n    case 'UPDATE_FAIL':\r\n      return {\r\n        ...state, loadingUpdate: false\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n\r\n}\r\n\r\nconst Profile:React.FC = () => {\r\n  const { state, dispatch: ctxDispatch } = useContext(Store);\r\n  const { userInfo } = state;\r\n\r\n  const [{ loadingUpdated }, dispatch] = useReducer(reducer , {\r\n    loadingUpdated: false,\r\n  });\r\n\r\n  const [name, setName] = useState(userInfo.name || \"\");\r\n  const [email, setEmail] = useState(userInfo.email || \"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const handleSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n    \r\n    if(password !== confirmPassword) {\r\n      toast.warning(\"As senhas nao se conhecidem\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const { data }:any  = await axios.put(\r\n        `http://localhost:3001/api/users/profile`, \r\n      {\r\n        name,\r\n        email,\r\n        password,\r\n      },\r\n      {\r\n        headers: { authorization: `Bearer ${userInfo.token}` } \r\n      },\r\n    );\r\n    dispatch({ \r\n      type: 'UPDATE_SUCCESS'\r\n    });\r\n    ctxDispatch({ type: 'USER_SIGNIN', payload: data });\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n    toast.success(\"Usuário atualizido com sucesso!\");\r\n\r\n    } catch (err) {\r\n      dispatch({ \r\n        type: 'UPDATE_FAIL' \r\n      });\r\n      toast.error(getError(err));\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <Container className='container'>\r\n      <Helmet>\r\n        <title>Perfil do usuário</title>\r\n      </Helmet>\r\n      <h1>\r\n        Perfil do usuário\r\n      </h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <Form.Group className='mb-3' controlId='name'>\r\n          <Form.Label>Nome</Form.Label>\r\n          <Form.Control\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className='mb-3' controlId='email'>\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            value={email}\r\n            type=\"email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className='mb-3' controlId='password'>\r\n          <Form.Label>Senha</Form.Label>\r\n          <Form.Control\r\n            value={password}\r\n            type=\"password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className='mb-3' controlId='confirmPassword'>\r\n          <Form.Label>Confirmar a senha</Form.Label>\r\n          <Form.Control\r\n            value={confirmPassword}\r\n            type=\"password\"\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\">\r\n          Atualizar\r\n        </Button>\r\n      </form>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Profile;"],"names":["Container","styled","reducer","state","action","type","loadingUpdate","useContext","Store","ctxDispatch","dispatch","userInfo","useReducer","loadingUpdated","useState","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","handleSubmit","e","preventDefault","toast","axios","headers","authorization","token","data","payload","localStorage","setItem","JSON","stringify","getError","className","onSubmit","Form","controlId","value","onChange","target","required","Button"],"sourceRoot":""}