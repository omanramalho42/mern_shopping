{"version":3,"file":"static/js/442.b8c42622.chunk.js","mappings":"0OAEaA,E,QAAYC,GAAAA,IAAU,6C,mBC0HnC,EAhHgC,WAC9B,OAAyCC,EAAAA,EAAAA,YAAWC,EAAAA,GAA5CC,EAAK,EAALA,MAAiBC,EAAW,EAArBC,SAEbC,EAEEH,EAFFG,SACQC,EACNJ,EADFK,KAAQD,gBAGV,GAAgCE,EAAAA,EAAAA,UAASF,EAAgBG,UAAY,IAAG,eAAjEA,EAAQ,KAAEC,EAAW,KAC5B,GAA8BF,EAAAA,EAAAA,UAASF,EAAgBK,SAAW,IAAG,eAA9DA,EAAO,KAAEC,EAAU,KAC1B,GAAwBJ,EAAAA,EAAAA,UAASF,EAAgBO,MAAQ,IAAG,eAArDA,EAAI,KAAEC,EAAO,KACpB,GAAoCN,EAAAA,EAAAA,UAASF,EAAgBS,YAAc,IAAG,eAAvEA,EAAU,KAAEC,EAAa,KAChC,GAA8BR,EAAAA,EAAAA,UAASF,EAAgBW,SAAW,IAAG,eAA9DA,EAAO,KAAEC,EAAU,KAEpBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACJhB,GACFc,EAAS,6BAEb,GAAE,CAACd,EAAUc,IA2Bb,OACE,4BACE,SAAC,KAAM,WACL,2BAAO,wBAGT,SAACG,EAAA,EAAa,CAACC,OAAK,EAACC,OAAK,KAC1B,UAAC1B,EAAS,CAAC2B,UAAU,4BAA2B,WAC9C,eAAIA,UAAU,OAAM,SAAC,sBAGrB,UAACC,EAAA,EAAI,CAACC,SApCS,SAACC,GACpBA,EAAEC,iBAEF1B,EAAY,CACV2B,KAAM,wBACNC,QAAS,CACPtB,SAAAA,EACAE,QAAAA,EACAE,KAAAA,EACAE,WAAAA,EACAE,QAAAA,KAIJe,aAAaC,QAAQ,kBAAmBC,KAAKC,UAAU,CACrD1B,SAAAA,EACAE,QAAAA,EACAE,KAAAA,EACAE,WAAAA,EACAE,QAAAA,KAGFE,EAAS,YACX,EAamC,WAC3B,UAACO,EAAA,QAAU,CAACD,UAAU,OAAOW,UAAU,WAAU,WAC/C,SAACV,EAAA,QAAU,UAAC,mBACZ,SAACA,EAAA,UAAY,CACXW,UAAQ,EACRC,MAAO7B,EACP8B,SAAU,SAACX,GAAC,OAAKlB,EAAYkB,EAAEY,OAAOF,MAAM,QAIhD,UAACZ,EAAA,QAAU,CAACD,UAAU,OAAOW,UAAU,UAAS,WAC9C,SAACV,EAAA,QAAU,UAAC,iBACZ,SAACA,EAAA,UAAY,CACXW,UAAQ,EACRC,MAAO3B,EACP4B,SAAU,SAACX,GAAC,OAAKhB,EAAWgB,EAAEY,OAAOF,MAAM,QAI/C,UAACZ,EAAA,QAAU,CAACD,UAAU,OAAOW,UAAU,OAAM,WAC3C,SAACV,EAAA,QAAU,UAAC,YACZ,SAACA,EAAA,UAAY,CACXW,UAAQ,EACRC,MAAOzB,EACP0B,SAAU,SAACX,GAAC,OAAKd,EAAQc,EAAEY,OAAOF,MAAM,QAI5C,UAACZ,EAAA,QAAU,CAACD,UAAU,OAAOW,UAAU,aAAY,WACjD,SAACV,EAAA,QAAU,UAAC,iBACZ,SAACA,EAAA,UAAY,CACXW,UAAQ,EACRC,MAAOvB,EACPwB,SAAU,SAACX,GAAC,OAAKZ,EAAcY,EAAEY,OAAOF,MAAM,QAIlD,UAACZ,EAAA,QAAU,CAACD,UAAU,OAAOW,UAAU,UAAS,WAC9C,SAACV,EAAA,QAAU,UAAC,aACZ,SAACA,EAAA,UAAY,CACXW,UAAQ,EACRC,MAAOrB,EACPsB,SAAU,SAACX,GAAC,OAAKV,EAAWU,EAAEY,OAAOF,MAAM,QAI/C,SAACG,EAAA,EAAM,CAACX,KAAK,SAAQ,SAAC,sBAOhC,C","sources":["styles/ShippingScreen.ts","screens/ShippingScreen/index.tsx"],"sourcesContent":["import styled from \"styled-components\"\r\n\r\nexport const Container = styled.div`\r\n  max-width: 600px;\r\n`;","import React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { Helmet } from 'react-helmet-async'\r\n\r\nimport { Store } from '../../context/Store'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport { Button, Form } from 'react-bootstrap'\r\n\r\nimport { Container } from '../../styles/ShippingScreen'\r\nimport CheckoutSteps from '../../components/CheckoutSteps'\r\n\r\nconst ShippingScreen:React.FC = () => {\r\n  const { state, dispatch: ctxDispatch } = useContext(Store);\r\n  const { \r\n    userInfo,\r\n    cart: { shippingAddress } \r\n  } = state\r\n\r\n  const [fullName, setFullName] = useState(shippingAddress.fullName || \"\");\r\n  const [address, setAddress] = useState(shippingAddress.address || \"\");\r\n  const [city, setCity] = useState(shippingAddress.city || \"\");\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode || \"\");\r\n  const [country, setCountry] = useState(shippingAddress.country || \"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if(!userInfo) {\r\n      navigate(\"/signin?redirect=/shipping\");\r\n    }\r\n  },[userInfo, navigate]);\r\n\r\n  const handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n\r\n    ctxDispatch({\r\n      type: 'SAVE_SHIPPING_ADDRESS',\r\n      payload: {\r\n        fullName,\r\n        address,\r\n        city,\r\n        postalCode,\r\n        country\r\n      }\r\n    });\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify({\r\n      fullName,\r\n      address,\r\n      city,\r\n      postalCode,\r\n      country  \r\n    }));\r\n\r\n    navigate(\"/payament\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>Sihpping Address</title>\r\n      </Helmet>\r\n\r\n      <CheckoutSteps step1 step2 />\r\n      <Container className=\"container small-container\">\r\n        <h1 className='my-3'>\r\n          Shipping Address\r\n        </h1>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group className='mb-3' controlId='fullName'>\r\n            <Form.Label>Nome completo</Form.Label>\r\n            <Form.Control \r\n              required\r\n              value={fullName}\r\n              onChange={(e) => setFullName(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group className='mb-3' controlId='address'>\r\n            <Form.Label>Endereço</Form.Label>\r\n            <Form.Control \r\n              required\r\n              value={address}\r\n              onChange={(e) => setAddress(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group className='mb-3' controlId='city'>\r\n            <Form.Label>Cidade</Form.Label>\r\n            <Form.Control \r\n              required\r\n              value={city}\r\n              onChange={(e) => setCity(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group className='mb-3' controlId='postalCode'>\r\n            <Form.Label>Postal code</Form.Label>\r\n            <Form.Control \r\n              required\r\n              value={postalCode}\r\n              onChange={(e) => setPostalCode(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group className='mb-3' controlId='country'>\r\n            <Form.Label>Páis</Form.Label>\r\n            <Form.Control \r\n              required\r\n              value={country}\r\n              onChange={(e) => setCountry(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button type='submit'>\r\n            Continuar\r\n          </Button>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ShippingScreen"],"names":["Container","styled","useContext","Store","state","ctxDispatch","dispatch","userInfo","shippingAddress","cart","useState","fullName","setFullName","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","navigate","useNavigate","useEffect","CheckoutSteps","step1","step2","className","Form","onSubmit","e","preventDefault","type","payload","localStorage","setItem","JSON","stringify","controlId","required","value","onChange","target","Button"],"sourceRoot":""}