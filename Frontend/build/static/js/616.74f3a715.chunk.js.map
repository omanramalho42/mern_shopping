{"version":3,"file":"static/js/616.74f3a715.chunk.js","mappings":"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","sources":["styles/ProductScreen.ts","screens/ProductScreen/index.tsx","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Image = styled.img`\r\n  max-width: 100%;\r\n`;","import React, { useEffect, useReducer, useContext } from 'react'\r\n\r\nimport axios from 'axios'\r\n\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport { Image } from '../../styles/ProductScreen'\r\n\r\nimport { Col, Row, ListGroup, Card, Badge, Button } from 'react-bootstrap'\r\n\r\nimport { LoadingBox, MessageBox, Rating } from '../../components'\r\n\r\nimport { Store } from '../../context/Store'\r\n\r\nimport { Helmet } from 'react-helmet-async'\r\n\r\nimport { getError } from '../../util/utils'\r\n\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst reducer = (state: any, action: any) => {\r\n  switch(action.type) {\r\n    case 'FETCH_REQUEST':\r\n      return {...state, loading: true}\r\n    case 'FETCH_SUCCESS':\r\n      return {...state, product: action.payload, loading: false}\r\n    case 'FETCH_FAIL':\r\n      return {...state, loading: false, error: action.payload}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst ProductScreen = () => {\r\n  const params = useParams();\r\n  const { slug } = params;\r\n  const navigate = useNavigate();\r\n\r\n  const [{loading, error, product}, dispatch] = useReducer(reducer, {\r\n    product: {},\r\n    loading: true,\r\n    error: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchDataProducts = async () => {\r\n      dispatch({ type: 'FETCH_REQUEST' })\r\n\r\n      await axios.get(`http://localhost:3001/api/products/slug/${slug}`)\r\n        .then((res) => {\r\n          dispatch({ type: 'FETCH_SUCCESS', payload: res.data })\r\n        })\r\n        .catch((error) => dispatch({ type: 'FETCH_FAIL', payload: getError(error) }))\r\n    }\r\n\r\n    fetchDataProducts();\r\n  },[slug])\r\n\r\n  const { state, dispatch: ctxDispatch } = useContext<any>(Store);\r\n  const { cart } = state;\r\n  \r\n  const handleAddItemCart = async () => {\r\n    const existItem = cart.cartItems.find(\r\n      (item: any) => item._id === product._id\r\n    );\r\n    \r\n    const quantity = \r\n      existItem \r\n      ? existItem.quantity + 1 \r\n      : 1;\r\n\r\n    const { data } = await axios.get(`http://localhost:3001/api/products/${product._id}`);\r\n    \r\n    if(data.countInStock < quantity) {\r\n      window.alert(\"Desculpe o produto esta fora de estoque\");\r\n      return;\r\n    }\r\n\r\n    ctxDispatch({\r\n      type: 'CART_ADD_ITEM', \r\n      payload: { ...product, quantity }\r\n    })\r\n\r\n    navigate('/cart');\r\n  }\r\n\r\n  return (\r\n    loading ? (\r\n      <LoadingBox />\r\n    ) : error ? (\r\n      <MessageBox variant=\"danger\">\r\n        { error }\r\n      </MessageBox>\r\n    ) : (\r\n      <div>\r\n        <Row>\r\n          <Col md={6}>\r\n            <Image \r\n              src={product.image} \r\n              alt={product.name} \r\n            />\r\n          </Col>\r\n          <Col md={3}>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <Helmet>\r\n                  <title>{product.name}</title>\r\n                </Helmet>\r\n                <h1>{product.name}</h1>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Rating \r\n                  rating={product.rating} \r\n                  numReviews={product.numReviews}\r\n                />\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                Preço : R${product.price}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                Descrição : {product.description}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col md={3}>\r\n            <Card>\r\n              <Card.Body>\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col> Preço: </Col>\r\n                      <Col> R${product.price} </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col> Status: </Col>\r\n                      <Col> \r\n                        {product.countInStock > 0 ? (\r\n                          <Badge bg=\"success\">\r\n                            Em estoque\r\n                          </Badge>\r\n                        ) : (\r\n                          <Badge bg=\"danger\">\r\n                            Fora de estoque\r\n                          </Badge>\r\n                        )} \r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <div className='d-grid'>\r\n                      <Button variant='primary' onClick={handleAddItemCart}>\r\n                        Adiconar ao carrinho\r\n                      </Button>\r\n                      </div>\r\n                    </ListGroup.Item>\r\n                  )}\r\n\r\n                </ListGroup>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  )\r\n}\r\n\r\nexport default ProductScreen","import classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroupItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  disabled,\n  eventKey,\n  className,\n  variant,\n  action,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    ...props\n  });\n  const handleClick = useEventCallback(event => {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n    navItemProps.onClick(event);\n  });\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  // eslint-disable-next-line no-nested-ternary\n  const Component = as || (action ? props.href ? 'a' : 'button' : 'div');\n  process.env.NODE_ENV !== \"production\" ? warning(as || !(!action && props.href), '`action=false` and `href` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    ...navItemProps,\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, meta.isActive && 'active', disabled && 'disabled', variant && `${bsPrefix}-${variant}`, action && `${bsPrefix}-action`)\n  });\n});\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ListGroupItem from './ListGroupItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    className,\n    bsPrefix: initialBsPrefix,\n    variant,\n    horizontal,\n    numbered,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as = 'div',\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  let horizontalVariant;\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : `horizontal-${horizontal}`;\n  }\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(BaseNav, {\n    ref: ref,\n    ...controlledProps,\n    as: as,\n    className: classNames(className, bsPrefix, variant && `${bsPrefix}-${variant}`, horizontalVariant && `${bsPrefix}-${horizontalVariant}`, numbered && `${bsPrefix}-numbered`)\n  });\n});\nListGroup.displayName = 'ListGroup';\nexport default Object.assign(ListGroup, {\n  Item: ListGroupItem\n});"],"names":["Image","styled","reducer","state","action","type","loading","product","payload","error","slug","useParams","navigate","useNavigate","useReducer","dispatch","useEffect","fetchDataProducts","axios","then","res","data","catch","getError","useContext","Store","ctxDispatch","cart","handleAddItemCart","existItem","cartItems","find","item","_id","quantity","countInStock","window","alert","variant","Row","Col","md","src","image","alt","name","ListGroup","rating","numReviews","price","description","Card","Badge","bg","className","Button","onClick","ListGroupItem","React","ref","bsPrefix","active","disabled","eventKey","as","props","useBootstrapPrefix","useNavItem","key","makeEventKey","href","navItemProps","meta","handleClick","useEventCallback","event","preventDefault","stopPropagation","undefined","tabIndex","Component","_jsx","classNames","isActive","displayName","horizontalVariant","useUncontrolled","activeKey","initialBsPrefix","horizontal","numbered","controlledProps","BaseNav","Object","assign","Item"],"sourceRoot":""}